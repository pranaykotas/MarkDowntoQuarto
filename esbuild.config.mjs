import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");

// Common options for both dev and production
const commonOptions = {
	banner: {
		js: banner,
	},
	entryPoints: ["main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"fs", // Make sure fs is external
		"path", // Add path as well
		...builtins
	],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "main.js",
	minify: prod, // Minify only in production
};

// --- Logic for Prod vs. Dev ---

if (prod) {
	// --- PRODUCTION BUILD ---
	// Just build once and exit. This is what 'npm run build' will do.
	esbuild.build(commonOptions).catch(() => process.exit(1));

} else {
	// --- DEVELOPMENT WATCH ---
	// This will run if you use 'npm run dev'.
	// It uses the 'context' API to watch for changes.
	(async () => {
		const ctx = await esbuild.context(commonOptions);
		await ctx.watch();
		console.log("Watching for changes...");
	})();
}
